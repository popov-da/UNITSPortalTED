@charset "utf-8";  /* Указывает, что кодировка файла — UTF-8 */

/* Стиль таблицы */
.table {
	display: grid;  /* Используем CSS Grid для создания таблицы */
	grid-template-columns: repeat(80, 1fr);  /* Устанавливаем 80 столбцов одинаковой ширины */
}

/* Стиль ячеек */
.cell {
	border: none;  /* Убираем рамку у ячеек */
	display: flex;  /* Используем Flexbox для центрирования содержимого */
	justify-content: center;  /* Горизонтальное выравнивание по центру */
	align-items: center;  /* Вертикальное выравнивание по центру */
	text-align: center;  /* Выравнивание текста по горизонтали */
	word-wrap: break-word;  /* Разрыв текста на слово, если оно не помещается */
}

/* Стиль заголовка таблицы */
.header {
	font-weight: bold;  /* Делаем текст заголовка жирным */
	border: none;  /* Убираем рамку у заголовка */
	padding: 10px;  /* Устанавливаем отступы внутри ячейки заголовка */
	grid-column: span 8;  /* Заголовок занимает 8 столбцов в таблице */
}

/* Стиль ячеек для выбора */
.choice {
	padding: 5px;  /* Добавляем отступы внутри ячеек для выбора */
}

/* Стиль отступа между строками таблицы */
.otstup {
	grid-column: span 80;  /* Ячейка с отступом занимает все 80 столбцов */
}

/* Стиль кнопок */
.knopka {
	display: flex;  /* Используем Flexbox для выравнивания содержимого кнопки */
	justify-content: center;  /* Горизонтальное выравнивание содержимого по центру */
	align-items: center;  /* Вертикальное выравнивание содержимого по центру */
	text-align: center;  /* Выравнивание текста по горизонтали */
	word-wrap: break-word;  /* Разбиваем длинные слова на несколько строк */
	cursor: pointer;  /* Указатель мыши становится в виде руки при наведении */
	border: 2px solid black;  /* Устанавливаем черную рамку вокруг кнопки */
	border-radius: 5px;  /* Закругляем углы кнопки */
	padding: 5px;  /* Добавляем отступы внутри кнопки */
	grid-column: span 6;  /* Кнопка занимает 6 столбцов */
}

.knopka:hover {
	background-color: #ccc;  /* При наведении фон кнопки становится серым */
}

/* Стиль горизонтальных стрелок */
.strHor {
	position: relative;  /* Устанавливаем относительное позиционирование для вложенных элементов */
	width: 100%;  /* Ширина блока — 100% от родительского элемента */
	height: 50px;  /* Высота блока */
	display: flex;  /* Используем Flexbox для выравнивания содержимого */
	align-items: center;  /* Вертикальное выравнивание по центру */
	justify-content: center;  /* Горизонтальное выравнивание по центру */
}

/* Стиль стрелок вправо */
.Right::after {
	content: '';  /* Псевдоэлемент для создания линии стрелки */
	position: absolute;  /* Абсолютное позиционирование относительно родительского блока */
	height: 4px;  /* Толщина линии стрелки */
	background: black;  /* Цвет линии стрелки */
	left: 0%;  /* Начало линии с левого края */
	right: 30px;  /* Конец линии, оставляем пространство для треугольника */
	top: 50%;  /* Центрируем по вертикали */
	transform: translateY(-50%);  /* Центрируем относительно середины блока */
}

.Right::before {
	content: '';  /* Псевдоэлемент для треугольника на конце стрелки */
	position: absolute;  /* Абсолютное позиционирование */
	right: 0;  /* Устанавливаем треугольник на правую сторону */
	top: 50%;  /* Центрируем по вертикали */
	transform: translateY(-50%);  /* Центрируем относительно середины блока */
	width: 30px;  /* Ширина треугольника */
	height: 20px;  /* Высота треугольника */
	background: black;  /* Цвет треугольника */
	clip-path: polygon(0 0, 100% 50%, 0 100%);  /* Форма треугольника */
}

/* Стиль стрелок влево */
.Left::after {
	content: '';  /* Псевдоэлемент для линии стрелки */
	position: absolute;  /* Абсолютное позиционирование */
	height: 4px;  /* Толщина линии стрелки */
	background: black;  /* Цвет линии стрелки */
	left: 30px;  /* Начало линии, оставляем место для треугольника */
	right: 0%;  /* Конец линии */
	top: 50%;  /* Центрируем по вертикали */
	transform: translateY(-50%);  /* Центрируем относительно середины блока */
}

.Left::before {
	content: '';  /* Псевдоэлемент для треугольника на конце стрелки */
	position: absolute;  /* Абсолютное позиционирование */
	left: 0;  /* Устанавливаем треугольник на левую сторону */
	top: 50%;  /* Центрируем по вертикали */
	transform: translateY(-50%);  /* Центрируем относительно середины блока */
	width: 30px;  /* Ширина треугольника */
	height: 20px;  /* Высота треугольника */
	background: black;  /* Цвет треугольника */
	clip-path: polygon(100% 0, 0 50%, 100% 100%);  /* Форма треугольника */
}

/* Стиль вертикальных стрелок */
.strVert {
	position: relative;  /* Для абсолютного позиционирования стрелок */
	width: 50px;  /* Ширина блока */
	height: 100%;  /* Высота блока */
	display: flex;  /* Используем Flexbox для выравнивания содержимого */
	align-items: center;  /* Вертикальное выравнивание по центру */
	justify-content: center;  /* Горизонтальное выравнивание по центру */
}

/* Стиль стрелок вниз */
.Down::after {
	content: '';  /* Псевдоэлемент для линии стрелки */
	position: absolute;  /* Абсолютное позиционирование */
	width: 4px;  /* Толщина линии стрелки */
	background: black;  /* Цвет линии стрелки */
	top: 0;  /* Верхняя часть стрелки */
	bottom: 30px;  /* Оставляем место для треугольника */
	left: 50%;  /* Центрируем по горизонтали */
	transform: translateX(-50%);  /* Центрируем относительно середины блока */
}

.Down::before {
	content: '';  /* Псевдоэлемент для треугольника на конце стрелки */
	position: absolute;  /* Абсолютное позиционирование */
	bottom: 0;  /* Нижняя часть стрелки */
	left: 50%;  /* Центрируем по горизонтали */
	transform: translateX(-50%);  /* Центрируем относительно середины блока */
	width: 20px;  /* Ширина треугольника */
	height: 30px;  /* Высота треугольника */
	background: black;  /* Цвет треугольника */
	clip-path: polygon(0 0, 50% 100%, 100% 0);  /* Форма треугольника */
}

/* Стиль стрелок вверх */
.Up::after {
	content: '';  /* Псевдоэлемент для линии стрелки */
	position: absolute;  /* Абсолютное позиционирование */
	width: 4px;  /* Толщина линии стрелки */
	background: black;  /* Цвет линии стрелки */
	top: 30px;  /* Начало линии сверху */
	bottom: 0;  /* Конец линии */
	left: 50%;  /* Центрируем по горизонтали */
	transform: translateX(-50%);  /* Центрируем относительно середины блока */
}

.Up::before {
	content: '';  /* Псевдоэлемент для треугольника на конце стрелки */
	position: absolute;  /* Абсолютное позиционирование */
	top: 0;  /* Верхняя часть стрелки */
	left: 50%;  /* Центрируем по горизонтали */
	transform: translateX(-50%);  /* Центрируем относительно середины блока */
	width: 20px;  /* Ширина треугольника */
	height: 30px;  /* Высота треугольника */
	background: black;  /* Цвет треугольника */
	clip-path: polygon(50% 0, 0 100%, 100% 100%);  /* Форма треугольника */
}

/* Стиль угловых линий */
.AngleLine {
	position: relative;  /* Для абсолютного позиционирования элементов внутри */
	width: 100%;  /* Длина горизонтальной линии */
	height: 100%;  /* Длина вертикальной линии */
}

/* Горизонтальная линия угла */
.horizontal {
	height: 4px;  /* Толщина горизонтальной линии */
	background: black;  /* Цвет линии */
	position: absolute;  /* Абсолютное позиционирование */
	top: var(--top);  /* Используем переменную для верхней позиции */
	bottom: var(--bottom);  /* Используем переменную для нижней позиции */
	left: var(--left);  /* Используем переменную для левой позиции */
	right: var(--right);  /* Используем переменную для правой позиции */
}

/* Вертикальная линия угла */
.vertical {
	width: 4px;  /* Толщина вертикальной линии */
	background: black;  /* Цвет линии */
	position: absolute;  /* Абсолютное позиционирование */
	top: var(--top);  /* Используем переменную для верхней позиции */
	bottom: var(--bottom);  /* Используем переменную для нижней позиции */
	left: var(--left);  /* Используем переменную для левой позиции */
	right: var(--right);  /* Используем переменную для правой позиции */
}

/* Наконечники стрелок угловых линий */
.pikRight {
	position: absolute;
	right: var(--right);  /* Используем переменную для позиции справа */
	top: var(--top);  /* Используем переменную для верхней позиции */
	transform: translateY(-50%);  /* Центрируем по вертикали */
	width: 30px;  /* Ширина треугольника */
	height: 20px;  /* Высота треугольника */
	background: black;  /* Цвет треугольника */
	clip-path: polygon(0 0, 100% 50%, 0 100%);  /* Форма треугольника */
}

.pikLeft {
	position: absolute;
	left: var(--left);  /* Используем переменную для позиции слева */
	top: var(--top);  /* Используем переменную для верхней позиции */
	transform: translateY(-50%);  /* Центрируем по вертикали */
	width: 30px;  /* Ширина треугольника */
	height: 20px;  /* Высота треугольника */
	background: black;  /* Цвет треугольника */
	clip-path: polygon(100% 0, 0 50%, 100% 100%);  /* Форма треугольника */
}

.pikDown {
	position: absolute;
	bottom: var(--bottom);  /* Используем переменную для позиции снизу */
	left: var(--left);  /* Используем переменную для позиции слева */
	transform: translateX(-50%);  /* Центрируем по горизонтали */
	width: 20px;  /* Ширина треугольника */
	height: 30px;  /* Высота треугольника */
	background: black;  /* Цвет треугольника */
	clip-path: polygon(0 0, 50% 100%, 100% 0);  /* Форма треугольника */
}

.pikUp {
	position: absolute;
	top: var(--top);  /* Используем переменную для позиции сверху */
	left: var(--left);  /* Используем переменную для позиции слева */
	transform: translateX(-50%);  /* Центрируем по горизонтали */
	width: 20px;  /* Ширина треугольника */
	height: 30px;  /* Высота треугольника */
	background: black;  /* Цвет треугольника */
	clip-path: polygon(50% 0, 0 100%, 100% 100%);  /* Форма треугольника */
}
